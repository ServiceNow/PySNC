name: PySNC Test

on: [pull_request]

jobs:
  install-test:
    runs-on: ubuntu-latest
    #if: github.repository_owner == 'ServiceNow'
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.8", "3.9", "3.11"]
    env:
      PYSNC_SERVER: ${{ secrets.PYSNC_SERVER }}
      PYSNC_USERNAME: ${{ secrets.PYSNC_USERNAME }}
      PYSNC_PASSWORD: ${{ secrets.PYSNC_PASSWORD }}
      PYSNC_JWT_CLIENT_SECRET: ${{ secrets.PYSNC_JWT_CLIENT_SECRET }}
      PYSNC_JWT_SHARED_KEY: ${{ secrets.PYSNC_JWT_SHARED_KEY }}
    steps:
    - uses: actions/checkout@v3
    - name: set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: cache poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.4.2-0
    - name: setup poetry
      uses: snok/install-poetry@v1
      with:
        poetry-version: 1.4.2
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: cache deps
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}
    - name: install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
       poetry install --no-interaction --no-root
    - name: run tests
      run: |
        poetry run pytest
    - name: build docs
      working-directory: ./docs
      run: |
        poetry run sphinx-build -b html . _build